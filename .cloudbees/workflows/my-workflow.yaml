apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow
on:
  push:
    branches:
      - "**"
jobs:
  build:
    steps:
      - uses: docker://openjdk
        name: Download Jenkins Cli
        shell: sh
        run: |
          curl -O https://sda.preview.cb-demos.io/cjoc/jnlpJars/jenkins-cli.jar
      - uses: cloudbees-io/checkout@v1
        name: Download Assets
        with:
          repository: cloudbees-pyang/CI-workshop-generator
          token: ${{ secrets.PYANG_GITHUB_TOKEN }}
          path: assets
      - uses: docker://openjdk
        name: Setup shared agent
        shell: sh
        run: |
          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ shared-pod-template --delete workshop-default
          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ shared-pod-template --add <./assets/share-pod-template.json      


#      - uses: docker://openjdk
#        name: Add casc bundle
#        shell: sh
#        run: |
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ apply-configuration <./assets/oc-casc-config.yaml
          
#      - uses: docker://openjdk
#        name: Create Controller
#        shell: sh
#        run: |
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ create-job workshop-controller <./assets/controller-config.xml 
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ managed-master-provision-and-start workshop-controller     

#      - uses: docker://openjdk
#        name: set casc bundle and start Controller
#        shell: sh
#        run: |
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ casc-bundle-set-controller -b HA-HS -c workshop-controller 
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ managed-master-restart workshop-controller      
          
#      - uses: docker://poseidon1979/jenkins-cli:1.1
#        name: create credential
#        shell: sh
#        run: |
#          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ create-credentials-by-xml system::system::jenkins "(global)" < ./assets/credential.xml

      - uses: docker://poseidon1979/jenkins-cli:1.1
        name: Add casc bundle
        shell: sh
        run: |
          java -jar ./jenkins-cli.jar -auth pyang:${{ secrets.THUNDER_OC_TOKEN }} -s https://sda.preview.cb-demos.io/cjoc/ export-configuration >> ./oc-conf.yaml
          yq eval '.unclassified.bundleStorageService.bundles += [{ "myFile" : "oc-casc-config.yaml" }]' -i oc-conf.yaml
          yq '(.. | select(has("myFile"))) |= load(.myFile)' oc-conf.yaml 
